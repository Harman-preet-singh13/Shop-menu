const Validator = require("validator")
const isEmpty = require("is-empty")

module.exports = function validateRegisterInput(data){
    let errors = {}

    data.name = !isEmpty(data.name) ? data.name : "";
    data.address = !isEmpty(data.address) ? data.address : "";
    data.contact = !isEmpty(data.contact) ? data.contact : "";
    data.email = !isEmpty(data.email) ? data.email : "";

    if(Validator.isEmpty(data.name)) {
        errors.name = "Name field is required"
    }

    if(Validator.isEmpty(data.address)) {
        errors.address = "Address field is required"
    }

    if(Validator.isEmpty(data.email)) {
        errors.email = "email field is required"
    } else if (!Validator.isEmail(data.email)) {
        errors.email = "Email is invaild"
    }
    if(Validator.isEmpty(data.contact)) {
        errors.contact = "contact field is required"
    }
     return {
        errors,
        isValid: isEmpty(errors)
    }
}



const express = require("express")
const router = express.Router()


const validateRegisterInput = require(".././validation/register")


const User = require(".././models/User")


router.post("/register", (req, res) => {

    const {errors, isValid } = validateRegisterInput(req.body)

    if (!isValid){
        
        return res.status(400).json(errors)
    }

    User.findOne({email: req.body.email }).then(user => {
        if(user){
            return res.status(400).json({ email: "Email already exists" });
        } else {
            const newUser = new User({
                name: req.body.name,
                address: req.body.address,
                email: req.body.email,
                contact: req.body.contact,
            })
        }
    })
})

module.exports = router

const mongoose = require("mongoose")
const Schema = mongoose.Schema

const UserSchema = new Schema({

    name: {
        type: String,
        required: true,
    },

    address: {
        type: String,
        required: true,
    },

    contact: {
        type: String,
        required: true,
    },
    
    email: {
        type: String,
        required: true,
    }

});

module.exports = User = mongoose.model("users", UserSchema)